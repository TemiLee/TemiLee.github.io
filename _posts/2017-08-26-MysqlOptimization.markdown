---
layout: post
title:  "Mysql Optimization"
date:   2017-08-26 05:01:29 +0100
tags: [MYSQL]
author: Temi Lee
<!-- modifyauthor: Temi Lee -->
<!-- lastmodify: 2017-08-08 01:27:29 -->
---

有利于 `Mysql` 性能的几点建议:

- 字段
    - 尽量使用TINYINT、SMALLINT、MEDIUM_INT作为整数类型而非INT，如果非负则加上UNSIGNED
    - 使用枚举或整数代替字符串类型
    - 尽量使用TIMESTAMP而非DATETIME
    - 单表不要有太多字段，建议在20以内
    - 避免使用NULL字段，很难查询优化且占用额外索引空间
    - 用整型来存IP

- 索引
    - 避免在WHERE子句中对字段进行NULL值判断，否则将导致引擎放弃使用索引而进行全表扫描
    - 字符字段只建前缀索引
    - 字符字段不要做主键
    - 不用外键，由程序保证约束

- 查询SQL
    - 通过开启慢查询日志来找出较慢的SQL
    - sql语句尽可能简单：`一条sql只能在一个cpu运算；` 大语句拆小语句，减少锁时间；一条大sql可以堵死整个库
    - OR改写成IN：`OR的效率是n级别，IN的效率是log(n)级别，` in的个数建议控制在200以内
    - 不做列运算：SELECT id WHERE age + 1 = 10，任何对列的操作都将导致表扫描，它包括数据库教程函数、计算表达式等等，查询时要尽可能将操作移至等号右边
    - 不用函数和触发器，在应用程序实现
    - 避免%xxx式查询
    - 使用同类型进行比较，比如用'123'和'123'比，123和123比 (???)
    - 尽量避免在WHERE子句中使用 != 或 <> 操作符，否则将引擎放弃使用索引而进行全表扫描
    