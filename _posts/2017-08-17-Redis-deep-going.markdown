---
layout: post
title:  "Redis deep going"
date:   2017-08-08 04:40:42
tags: [REDIS,CACHE]
author: Temi Lee
---

之前写了一篇关于<a href="/2017/08/08/Redis/">redis的博客</a>,这篇博客侧重点在缓存系统的设计与使用

**使用缓存的利弊:**

利:
- 加速读写，提高系统响应速度
- 降低后台数据库压力

弊:
- 数据不一致
- 代码维护和运维成本

**缓存更新策略:**
- LRU/LFU/FIFO 算法
- 超时剔除
- 主动更新


**缓存粒度控制**
- 整条记录缓存
    1. 缓存全部数据通用性更高(优点)
    2. 缓存全部数据造成内存浪费、网络资源压力大、序列化反序列化开销大
- 部分数据分开缓存

**缓存穿透**
定义:查询一条根本不存在的数据，缓存层不存在，从而穿透到数据库层(代码、数据有问题，或恶意攻击)
- 缓存空对象
- Boolean 过滤器

**无底洞问题**
定义:客户端一次批量操作会涉及多次网络操作，批量操作会随着节点增多，耗时增长

**雪崩问题:**
定义:缓存挂掉之后，流量直接打到存储层
- 保证缓存的高可用
- 使用依赖隔离组件为后端限流降级(Hystrix)

**Key失效重建**
定义:大量缓存陆续失效，造成过多的流量打到数据层
- 采用互斥锁
- 不设置过期时间